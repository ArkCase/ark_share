# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# See Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D).
# If the container memory is not explicitly set then the flags above will set the max heap default to 1/4 of the container's memory, which may not be ideal.
# For performance tuning, assign the container memory and give a percentage of it to the JVM.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
    alfresco:
        image: alfresco/alfresco-content-repository-community:acs
        mem_limit: 1500m
        ports:
            - 8080:8080
        volumes:
            - alf-repo-data:/usr/local/tomcat/alf_data
        environment:
            JAVA_TOOL_OPTIONS: >-
                -Dencryption.keystore.type=JCEKS
                -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
                -Dencryption.keyAlgorithm=DESede
                -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
                -Dmetadata-keystore.password=mp6yc0UD9e
                -Dmetadata-keystore.aliases=metadata
                -Dmetadata-keystore.metadata.password=oKIWzVdEdA
                -Dmetadata-keystore.metadata.algorithm=DESede
                
            JAVA_OPTS: >-
                -Ddb.driver=org.mariadb.jdbc.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url="jdbc:mariadb://mariadb:3306/alfresco?useUnicode=yes&characterEncoding=UTF-8"
                -Dshare.host=share
                -Dshare.port=8081
                -Dalfresco.host=alfresco
                -Dalfresco.port=8080
                -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
                -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dcsrf.filter.enabled=false
                -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80

    share:
        image: alfresco/alfresco-share:ark
        build: .
        mem_limit: 1g
        ports:
            - 8081:8080
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: >-
                -XX:MinRAMPercentage=50
                -XX:MaxRAMPercentage=80
                -Dalfresco.host=alfresco
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http

    mariadb:
        image: mariadb:10.5
        volumes:
            - mariadb-data:/var/lib/mysql
        environment:
            - MARIADB_ROOT_PASSWORD=alfresco
            - MARIADB_DATABASE=alfresco
            - MARIADB_USER=alfresco
            - MARIADB_PASSWORD=alfresco
        command: "mysqld
            --character-set-server=utf8
            --collation-server=utf8_bin
            --lower_case_table_names=1
            --max_connections=200
            --innodb-flush-method=O_DIRECT
            --wait_timeout=28800"
        ports:
            - 3306:3306

    activemq:
        image: alfresco/alfresco-activemq:5.16.1
        mem_limit: 1g
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP

volumes:
    alf-repo-data:
    mariadb-data:

